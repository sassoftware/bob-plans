

macros distro_label sles.rpath.com@rpath:sles-10sp3
macros contrib_label sles.rpath.com@rpath:sles-10-common
macros conary_label sles.rpath.com@rpath:sles-10-common
macros conary_test_label %(conary_label)s

defaultBuildReqs []

resolveTrovesOnly True
resolveTroves conary=%(conary_label)s conary-build=%(conary_label)s
resolveTroves conary-repository=%(conary_label)s conary-policy=%(conary_label)s
#resolveTroves conary-test=%(conary_test_label)s
resolveTroves testutils=jules.eng.rpath.com@rpath:testutils
resolveTroves rpathpackage=%(contrib_label)s
resolveTroves info-sfcb=%(contrib_label)s
resolveTroves sblim-cmpi-base-conary=%(contrib_label)s
resolveTroves sblim-sfcb-conary=%(contrib_label)s
resolveTroves sblim-sfcb-schema-conary=%(contrib_label)s
resolveTroves sblim-sfcc-conary=%(contrib_label)s
resolveTroves cmpi-bindings-conary=%(contrib_label)s
resolveTroves pywbem-conary=%(contrib_label)s
resolveTroves group-rpath-packages=%(contrib_label)s
resolveTroves group-os=%(distro_label)s

# ILP is only used for non-chroot items such as superclasses
installLabelPath %(distro_label)s %(contrib_label)s testbits.rb.rpath.com@rpl:1

autoLoadRecipes group-superclasses=%(contrib_label)s[is:x86_64]
rpmRequirements trove: rpm-sles-10:lib(RPM-SLES-10)


# target configuration

targetLabel jules.eng.rpath.com@rpath:sles-10-%(rbuilder_forest)s


resolveTroves \
        python-cssutils=%(contrib_label)s \
        genisoimage=%(devel_label)s

target []
target conary
target conary-policy
target conary-test

[target:conary]
sourceTree conary recipes/unified/conary
classVar plat 'sles'
classVar platver '10'
classVar embedded False
classVar encapsulated True


[target:conary-policy]
sourceTree conary-policy recipes/sles-11
# Break dep cycle
after conary

[target:conary-test]
sourceTree conary recipes/unified/conary-test
after conary-policy
classVar plat 'sles'
classVar platver '10'
classVar encapsulated True
flavor %rPL 2:x86%      !conary-test.coverage, conary-test.split1
flavor %rPL 2:x86%      !conary-test.coverage, conary-test.split2
flavor %rPL 2:x86%      !conary-test.coverage, conary-test.split3
flavor %rPL 2:x86%      !conary-test.coverage, conary-test.split4
flavor %rPL 2:x86_64%   !conary-test.coverage, conary-test.split1
flavor %rPL 2:x86_64%   !conary-test.coverage, conary-test.split2
flavor %rPL 2:x86_64%   !conary-test.coverage, conary-test.split3
flavor %rPL 2:x86_64%   !conary-test.coverage, conary-test.split4

